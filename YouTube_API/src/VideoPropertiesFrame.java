
import java.awt.event.WindowEvent;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;


import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Danielyt
 */
public class VideoPropertiesFrame extends javax.swing.JFrame {

    /**
     * Creates new form VideoPropertiesFrame
     */
    private JFrame pparent;
    private String[] youtubeCategories;
    private YoutubeVideo youtubeVideo;
    
    public VideoPropertiesFrame() {
        this(null, null);
    }

    public VideoPropertiesFrame(JFrame pparent, YoutubeVideo youtubeVideo){
        this.pparent = pparent;
        youtubeCategories = setYoutubeCategories();
        this.youtubeVideo = youtubeVideo;
        initComponents();
        //String[] petStrings = { "Bird", "Cat", "Dog", "Rabbit", "Pig" };
        videoTitleTextField.setText(this.youtubeVideo.getTitle());
        categoryComboBox.setModel(new DefaultComboBoxModel(youtubeCategories));
        if (this.youtubeVideo != null)
            categoryComboBox.setSelectedIndex( getCategoryIndex( this.youtubeVideo.getCategory() ) );
        videoDescriptionTextArea.setText(this.youtubeVideo.getDescription());
        videoKeyWordsTextField.setText(this.youtubeVideo.getKeywords());
        videoPrivateCheckBox.setSelected(this.youtubeVideo.isPrivateVideo());
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        videoDescriptionPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        videoTitleTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        categoryComboBox = new javax.swing.JComboBox();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(350, 0), new java.awt.Dimension(350, 0), new java.awt.Dimension(350, 0));
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        videoDescriptionTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        videoKeyWordsTextField = new javax.swing.JTextField();
        videoPrivateCheckBox = new javax.swing.JCheckBox();
        buttonPanel = new javax.swing.JPanel();
        saveVideoProperties = new javax.swing.JButton();
        cancelVideoProperties = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Video properties");
        setPreferredSize(new java.awt.Dimension(600, 425));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        videoDescriptionPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        videoDescriptionPanel.setMaximumSize(new java.awt.Dimension(600, 500));
        videoDescriptionPanel.setMinimumSize(new java.awt.Dimension(230, 100));
        videoDescriptionPanel.setPreferredSize(new java.awt.Dimension(600, 365));
        videoDescriptionPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("Title:");
        jLabel1.setMaximumSize(new java.awt.Dimension(600, 16));
        jLabel1.setMinimumSize(new java.awt.Dimension(200, 16));
        jLabel1.setPreferredSize(new java.awt.Dimension(580, 16));
        videoDescriptionPanel.add(jLabel1);

        videoTitleTextField.setColumns(72);
        videoDescriptionPanel.add(videoTitleTextField);

        jLabel2.setText("Category:");
        jLabel2.setMaximumSize(new java.awt.Dimension(600, 16));
        jLabel2.setMinimumSize(new java.awt.Dimension(200, 16));
        jLabel2.setPreferredSize(new java.awt.Dimension(580, 16));
        videoDescriptionPanel.add(jLabel2);

        categoryComboBox.setAlignmentX(0.0F);
        categoryComboBox.setMaximumSize(new java.awt.Dimension(200, 50));
        categoryComboBox.setMinimumSize(new java.awt.Dimension(120, 20));
        categoryComboBox.setPreferredSize(new java.awt.Dimension(200, 20));
        videoDescriptionPanel.add(categoryComboBox);
        videoDescriptionPanel.add(filler1);

        jLabel3.setText("Description:");
        jLabel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLabel3.setMaximumSize(new java.awt.Dimension(600, 16));
        jLabel3.setMinimumSize(new java.awt.Dimension(200, 16));
        jLabel3.setPreferredSize(new java.awt.Dimension(580, 17));
        videoDescriptionPanel.add(jLabel3);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(580, 136));

        videoDescriptionTextArea.setColumns(20);
        videoDescriptionTextArea.setLineWrap(true);
        videoDescriptionTextArea.setRows(5);
        jScrollPane2.setViewportView(videoDescriptionTextArea);

        videoDescriptionPanel.add(jScrollPane2);

        jLabel4.setText("Key words:");
        jLabel4.setMaximumSize(new java.awt.Dimension(600, 14));
        jLabel4.setPreferredSize(new java.awt.Dimension(580, 14));
        videoDescriptionPanel.add(jLabel4);

        videoKeyWordsTextField.setColumns(72);
        videoDescriptionPanel.add(videoKeyWordsTextField);

        videoPrivateCheckBox.setText("Video private?");
        videoDescriptionPanel.add(videoPrivateCheckBox);

        getContentPane().add(videoDescriptionPanel);

        buttonPanel.setMinimumSize(new java.awt.Dimension(137, 20));
        buttonPanel.setPreferredSize(new java.awt.Dimension(230, 20));

        saveVideoProperties.setText("Save");
        saveVideoProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveVideoPropertiesActionPerformed(evt);
            }
        });
        buttonPanel.add(saveVideoProperties);

        cancelVideoProperties.setText("Cancel");
        cancelVideoProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelVideoPropertiesActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelVideoProperties);

        getContentPane().add(buttonPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (pparent != null)
            pparent.setEnabled(true);
    }//GEN-LAST:event_formWindowClosing

    private void cancelVideoPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelVideoPropertiesActionPerformed
        // TODO add your handling code here:
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_cancelVideoPropertiesActionPerformed

    private void saveVideoPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveVideoPropertiesActionPerformed
        // TODO add your handling code here:
        youtubeVideo.setTitle(videoTitleTextField.getText());
        youtubeVideo.setCategory(String.valueOf(categoryComboBox.getSelectedItem()));
        youtubeVideo.setDescription(videoDescriptionTextArea.getText());
        youtubeVideo.setKeywords(videoKeyWordsTextField.getText());
        youtubeVideo.setPrivateVideo(videoPrivateCheckBox.isSelected());
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));

    }//GEN-LAST:event_saveVideoPropertiesActionPerformed

    /**
     * @param args the command line arguments
     */

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelVideoProperties;
    private javax.swing.JComboBox categoryComboBox;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton saveVideoProperties;
    private javax.swing.JPanel videoDescriptionPanel;
    private javax.swing.JTextArea videoDescriptionTextArea;
    private javax.swing.JTextField videoKeyWordsTextField;
    private javax.swing.JCheckBox videoPrivateCheckBox;
    private javax.swing.JTextField videoTitleTextField;
    // End of variables declaration//GEN-END:variables
    private String[] setYoutubeCategories(){
        Vector<String> categories = new Vector<String>(); 
        
        try {
            DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance(); 
            DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder(); 
            Document doc = docBuilder.parse ("http://gdata.youtube.com/schemas/2007/categories.cat"); 
            NodeList listOfCategories = doc.getElementsByTagName("atom:category");

            int totalCategories = listOfCategories.getLength(); 
            for(int s=0; s<totalCategories ; s++){ 
                Node categorieNode = listOfCategories.item(s); 
                if(categorieNode.getNodeType() == Node.ELEMENT_NODE){
                    Element categorieElement = (Element)categorieNode; 
                    NodeList categorieBrowseable = categorieElement.getElementsByTagName("yt:browsable");
                    if(categorieBrowseable.getLength() >= 1){ 
                        categories.add(categorieElement.getAttribute("term")); 
                    }
                } 
            }
        }catch (Exception e) { 
            System.err.println (e.toString()); 
        } 

        return (String[])categories.toArray(new String[categories.size()]);
    }
    
    private int getCategoryIndex(String str) {
        for (int i = 0; i < youtubeCategories.length; i++){
            if(youtubeCategories[i].endsWith(str))
                return i;
        }
        return 0;
    }
}
