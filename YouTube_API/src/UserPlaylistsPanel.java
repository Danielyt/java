
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Danielyt
 */
public class UserPlaylistsPanel extends javax.swing.JPanel {

    /**
     * Creates new form UserPlaylistsPanel
     */
    private Object[] userPlaylists;
    private Object[] currentPlaylistVideos;
    public UserPlaylistsPanel() {
        initComponents();
    }

    public void setUserPlaylists(Object[] obj) {
        if (obj != null) {            
            userPlaylists = new Object[obj.length];
            String[] playlistNames = new String[obj.length];
            for(int i = 0; i < obj.length; i++) {
                userPlaylists[i] = obj[i];
                playlistNames[i] = (String)YouTubeActions.getPlaylistInfo(userPlaylists[i])[0];
            }
            userPlaylistsComboBox.setModel(new DefaultComboBoxModel(playlistNames));
            userPlaylistsComboBox.setSelectedIndex(-1);
        }
        
    }
    
    public void setCurrentPlayListVideos(Object[] videos){
        currentPlaylistVideos = new Object[videos.length];
        for(int i = 0; i < videos.length; i++)
            currentPlaylistVideos[i] = videos[i];
        fillVideosFromPlaylistTable();        
    }
    
    public void fillVideosFromPlaylistTable(){
        DefaultTableModel model = (DefaultTableModel) videosFromPlaylistTable.getModel();
        model.setRowCount(0);
        if(currentPlaylistVideos != null) {
            Object[] videoRow;
            for (int i = 0; i < currentPlaylistVideos.length; i++){
                videoRow = YouTubeActions.getVideoEntryInfo(currentPlaylistVideos[i]);
                if (videoRow != null)
                    model.addRow(videoRow);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userPlaylistsComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        videosFromPlaylistTable = new javax.swing.JTable();

        userPlaylistsComboBox.setPreferredSize(new java.awt.Dimension(200, 20));
        userPlaylistsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPlaylistsComboBoxActionPerformed(evt);
            }
        });
        add(userPlaylistsComboBox);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(1100, 430));
        jScrollPane1.setRequestFocusEnabled(false);

        videosFromPlaylistTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Uploaded by", "Video ID", "Description", "Keywords", "Latitude", "Longitude", "Average rating", "View count", "Duration"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Float.class, java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(videosFromPlaylistTable);

        add(jScrollPane1);
    }// </editor-fold>//GEN-END:initComponents

    private void userPlaylistsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPlaylistsComboBoxActionPerformed
        // TODO add your handling code here:
        int index = userPlaylistsComboBox.getSelectedIndex();
        System.out.println("Selected index changed" + index);
        if ( index >=0 ){
            setCurrentPlayListVideos(YouTubeActions.getVideosFromPlaylist(userPlaylists[index]));
        }

    }//GEN-LAST:event_userPlaylistsComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox userPlaylistsComboBox;
    private javax.swing.JTable videosFromPlaylistTable;
    // End of variables declaration//GEN-END:variables
}
