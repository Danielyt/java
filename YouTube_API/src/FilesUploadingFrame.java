
import java.awt.Cursor;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.SwingWorker;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Danielyt
 */
public class FilesUploadingFrame extends javax.swing.JFrame {

    /**
     * Creates new form FilesUploadingFrame
     */
        private class UploadTask extends SwingWorker<Void, Void> {
        @Override
        public synchronized Void doInBackground() {          
            int progress = 0;
            setProgress(0);
            //try {               
                //Thread.sleep(1000);
                while (progress <= index && !isCancelled()) {
                    //Sleep for up to one second.
                    //Thread.sleep(random.nextInt(1000));
                    //YouTubeActions.uploadVideo(filesToUpload[i]);
                    //filesToUpload[i++] = null;
                    setProgress(progress);
                    YouTubeActions.uploadVideo(videosToUpload[progress]);
                    System.out.println("Progress: "+ progress + "\nindex: " + index);
                    videosToUpload[progress++] = null;                    
                    
                    //Thread.sleep(2000);
                }
                System.out.println("Taks done");
          //  }
             //catch (InterruptedException ignore) {}
            return null;
        }
 
        @Override
        public synchronized void done() {
            //System.out.println("in UploadTaks done");
            FilesUploadingFrame.this.dispatchEvent(new WindowEvent(FilesUploadingFrame.this, WindowEvent.WINDOW_CLOSING));            
        }
    }
    private UploadFrame pparent;
    private YoutubeVideo[] videosToUpload;
    private int index;
    private UploadTask uploadTask;
    
    public FilesUploadingFrame(UploadFrame pparent, YoutubeVideo[] videosToUpload, int index) {
        this.pparent = pparent; 
        this.videosToUpload = videosToUpload;
        this.index = index;
        initComponents();
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        uploadProgressBar.setMaximum(index + 1);
        uploadProgressBar.setStringPainted(true);
        uploadTask = new UploadTask();
        currentlyUploadingVideoLabel.setText("Currently uploading \"" +
                    videosToUpload[0].getTitle() + "\"");
        uploadTask.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                taskPropertyChange(evt);
            }
        });
        uploadTask.execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(500, 15), new java.awt.Dimension(500, 15), new java.awt.Dimension(500, 15));
        currentlyUploadingVideoLabel = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(500, 15), new java.awt.Dimension(500, 15), new java.awt.Dimension(500, 15));
        uploadProgressBar = new javax.swing.JProgressBar();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(490, 0), new java.awt.Dimension(490, 0), new java.awt.Dimension(490, 0));
        cancelUploadingButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Uploading videos, please wait.");
        setPreferredSize(new java.awt.Dimension(500, 163));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.FlowLayout());
        getContentPane().add(filler1);

        currentlyUploadingVideoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentlyUploadingVideoLabel.setText("asdfasfsadf");
        currentlyUploadingVideoLabel.setAlignmentX(0.5F);
        currentlyUploadingVideoLabel.setMaximumSize(new java.awt.Dimension(400, 20));
        currentlyUploadingVideoLabel.setPreferredSize(new java.awt.Dimension(400, 20));
        getContentPane().add(currentlyUploadingVideoLabel);
        getContentPane().add(filler2);

        uploadProgressBar.setMaximumSize(new java.awt.Dimension(32767, 25));
        uploadProgressBar.setPreferredSize(new java.awt.Dimension(400, 25));
        uploadProgressBar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                uploadProgressBarPropertyChange(evt);
            }
        });
        getContentPane().add(uploadProgressBar);
        getContentPane().add(filler3);

        cancelUploadingButton.setText("Cancel");
        cancelUploadingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelUploadingButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelUploadingButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        setCursor(null);
        uploadTask.cancel(true);
        if (pparent != null){            
            pparent.updateFilesToUpload();
            pparent.populateFilesToUploadList();            
            pparent.setEnabled(true);
        }
    }//GEN-LAST:event_formWindowClosing

    private void uploadProgressBarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_uploadProgressBarPropertyChange
        // TODO add your handling code here:
                 
    }//GEN-LAST:event_uploadProgressBarPropertyChange

    private void taskPropertyChange(java.beans.PropertyChangeEvent evt){
        if ("progress" == evt.getPropertyName() && !uploadTask.isCancelled()) {
            int progress = (Integer) evt.getNewValue();
            
            uploadProgressBar.setValue(progress);
            currentlyUploadingVideoLabel.setText("Currently uploading \"" +
                    videosToUpload[progress].getTitle() + "\"");
        }
        if (uploadTask.isDone() && !uploadTask.isCancelled()) {
            //DisplaySuccessmessage
            JOptionPane.showMessageDialog(pparent, "All files have been successfully uploaded.");
        }
    }
    private void cancelUploadingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelUploadingButtonActionPerformed
        // TODO add your handling code here:
        uploadTask.cancel(true);
    }//GEN-LAST:event_cancelUploadingButtonActionPerformed

    public JProgressBar getUploadProgressBar(){
        return uploadProgressBar;
    }
    
    public void setUploadingVideoText(String str){
        currentlyUploadingVideoLabel.setText(str);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelUploadingButton;
    private javax.swing.JLabel currentlyUploadingVideoLabel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JProgressBar uploadProgressBar;
    // End of variables declaration//GEN-END:variables
}
